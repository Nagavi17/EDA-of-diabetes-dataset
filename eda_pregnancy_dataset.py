# -*- coding: utf-8 -*-
"""EDA_pregnancy dataset.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1lBCB6yOvVRcE0ddLaN5WxnR7o4_XFbNK
"""

import pandas as pd
df=pd.read_csv('/content/diabetes.csv')

df.head()

df.tail()

df.describe()

df.max()

import pandas as pd
data_iris = pd.read_csv('/content/diabetes.csv')
print(data_iris["Outcome"])

print(data_iris['Outcome'].value_counts())

print(len(data_iris['Outcome']))
print(data_iris['Outcome'].value_counts()/len(data_iris['Outcome']))

outcome_list=data_iris['Outcome'].tolist()
print(outcome_list)

print(data_iris["Outcome"].mean())
print(data_iris["Outcome"].median())
print(data_iris["Outcome"].max())
print(data_iris["Outcome"].min())
print(data_iris["Outcome"].sum())
print(data_iris["Outcome"].product())

#sorting
print(data_iris.sort_values(by='BloodPressure',ascending=False).head(2))
print(data_iris.sort_values(by='BloodPressure',ascending=False))

print(data_iris.sort_values(by='BloodPressure',ascending=True).head(2))
print(data_iris.sort_values(by='BloodPressure',ascending=True))

Outcome_data=data_iris[data_iris['Outcome']==0]
print(Outcome_data)

Outcome_data=data_iris[data_iris['Outcome']==1]
print(Outcome_data)

age_data=data_iris['Age']>=50
print(data_iris[age_data].head(3))
print(data_iris[age_data])

filter1=data_iris[(data_iris['Age']>=35)&(data_iris["BloodPressure"]<=40)]#data iris is a variable can use any
print(filter1.shape)
print(filter1['Pregnancies'].sum())#sum of preg
print(filter1['Pregnancies'].product())#prod of preg

filter2=data_iris[(data_iris['Outcome']==1)|(data_iris["Age"]>=35)|(data_iris['Pregnancies']<=60)] #|this symbol is or gate
print(filter2.shape)
print(filter2['Pregnancies'].mean())
print(filter2['Pregnancies'].median())

filter3=data_iris[(data_iris['Outcome']==1)&(data_iris.Age<=20)|(data_iris['Pregnancies']>=2)|(data_iris.BloodPressure>60)]
print(filter3)

# prompt: give all the plots for the above dataset

import matplotlib.pyplot as plt
import seaborn as sns

# Histogram of Age
plt.figure(figsize=(8, 6))
sns.histplot(data_iris['Age'], kde=True)
plt.title('Distribution of Age')
plt.xlabel('Age')
plt.ylabel('Frequency')
plt.show()

# Boxplot of Blood Pressure
plt.figure(figsize=(8, 6))
sns.boxplot(x='Outcome', y='BloodPressure', data=data_iris)
plt.title('Blood Pressure by Outcome')
plt.xlabel('Outcome')
plt.ylabel('Blood Pressure')
plt.show()

# Scatter plot of Glucose vs Insulin
plt.figure(figsize=(8, 6))
sns.scatterplot(x='Glucose', y='Insulin', hue='Outcome', data=data_iris)
plt.title('Glucose vs. Insulin')
plt.xlabel('Glucose')
plt.ylabel('Insulin')
plt.show()

# Correlation Heatmap
plt.figure(figsize=(10, 8))
sns.heatmap(data_iris.corr(), annot=True, cmap='coolwarm')
plt.title('Correlation Matrix')
plt.show()

# Pairplot
sns.pairplot(data_iris, hue='Outcome')
plt.show()

# Countplot of Outcome
plt.figure(figsize=(6, 4))
sns.countplot(x='Outcome', data=data_iris)
plt.title('Number of Patients with and without Diabetes')
plt.xlabel('Outcome (0: No Diabetes, 1: Diabetes)')
plt.ylabel('Count')
plt.show()

